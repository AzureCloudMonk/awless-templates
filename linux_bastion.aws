# Template for us-west-1

vpc = create vpc cidr=10.0.0.0/16 name=BastionVpc
gateway = create internetgateway
attach internetgateway id=$gateway vpc=$vpc

create subnet cidr=10.0.0.0/19 name=PrivSubnet1 vpc=$vpc availabilityzone={zone1}
create subnet cidr=10.0.32.0/19 name=PrivSubnet2 vpc=$vpc availabilityzone={zone2}

pubSubnet1 = create subnet cidr=10.0.128.0/20 name=PubSubnet1 vpc=$vpc availabilityzone={zone1}
update subnet id=$pubSubnet1 public=true

pubSubnet2 = create subnet cidr=10.0.144.0/20 name=PubSubnet2 vpc=$vpc availabilityzone={zone2}
update subnet id=$pubSubnet2 public=true

rtable = create routetable vpc=$vpc
attach routetable id=$rtable subnet=$pubSubnet1
attach routetable id=$rtable subnet=$pubSubnet2
create route cidr=0.0.0.0/0 gateway=$gateway table=$rtable

bastionSecGroup = create securitygroup vpc=$vpc description=BastionSecGroup name=bastion-secgroup
update securitygroup id=$bastionSecGroup inbound=authorize protocol=tcp cidr={remoteaccess-cidr} portrange=22
update securitygroup id=$bastionSecGroup inbound=authorize protocol=icmp cidr={remoteaccess-cidr} portrange=any

create role name=BastionHostRole principal-service=ec2.amazonaws.com sleep-after=30
bastionEc2Policy = create policy name=BastionEc2Permissions action=ec2:DescribeAddresses,ec2:AssociateAddress resource=all effect=allow
attach policy role=BastionHostRole arn=$bastionEc2Policy

launchConfig = create launchconfiguration image=ami-7a85a01a keypair={keypair.name} securitygroups=$bastionSecGroup name=BastionHostsLaunchConfig type=t2.micro role=BastionHostRole userdata=./userdata/prepare_bastion.sh
create scalinggroup desired-capacity=2 launchconfiguration=$launchConfig max-size=2 min-size=2 name=autoscaling-instances-group subnets=$pubSubnet1